<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c语言 on 李雨菲的博客 Li Yufei&#39;s Blog</title>
    <link>https://yufei-li.github.io/categories/c%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in c语言 on 李雨菲的博客 Li Yufei&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>商业转载请联系作者获得授权，非商业转载请注明出处。</copyright>
    <lastBuildDate>Fri, 13 Nov 2020 14:54:26 +0800</lastBuildDate>
    
	<atom:link href="https://yufei-li.github.io/categories/c%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>c语言笔记(6)</title>
      <link>https://yufei-li.github.io/post/c6/</link>
      <pubDate>Fri, 13 Nov 2020 14:54:26 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c6/</guid>
      <description>Function-like macros define macros that work in a similar way like a function call. This is known as function-like macros. in SQUARE(x), there must be no gap between SQUARE and (x) the function-like macros simply do replacement, so in the macro definition, ((x) * (x)) the brackets are needed, otherwise (x * x) = (5 + 1 * 5 + 1) = (5 + 5 + 1) = 11 1</description>
    </item>
    
    <item>
      <title>localtime function</title>
      <link>https://yufei-li.github.io/post/c_localtime/</link>
      <pubDate>Thu, 12 Nov 2020 22:47:44 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c_localtime/</guid>
      <description>tm structure in c 1 2 3 4 5 6 7 8 9 10 11 struct tm { int tm_sec; /* seconds, range 0 to 59 */ int tm_min; /* minutes, range 0 to 59 */ int tm_hour; /* hours, range 0 to 23 */ int tm_mday; /* day of the month, range 1 to 31 */ int tm_mon; /* month, range 0 to 11 */ int tm_year; /* The</description>
    </item>
    
    <item>
      <title>c语言笔记(5)</title>
      <link>https://yufei-li.github.io/post/c5/</link>
      <pubDate>Wed, 11 Nov 2020 21:36:24 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c5/</guid>
      <description>structures Arrays allow to define type of variables that can hold several data items of the same kind. Similarly structure is another user defined data type available in C that allows to combine data items of different kinds. the element in the structure can be another structure Usually, the first letter of the name of the stucture is capital letter 1 2 3 4 5 6 7 struct [structure tag]</description>
    </item>
    
    <item>
      <title>c语言笔记(4)</title>
      <link>https://yufei-li.github.io/post/c4/</link>
      <pubDate>Wed, 28 Oct 2020 13:12:10 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c4/</guid>
      <description>global variable &amp;amp; local variable Local variable : Variables that are declared inside a function or block are called local variables. They can be used only by statements that are inside that function or block of code. global variable:Global variables are defined outside a function, usually on top of the program. Global variables hold their values throughout the lifetime of your program and they can be accessed inside any of</description>
    </item>
    
    <item>
      <title>c exercise c语言练习笔记</title>
      <link>https://yufei-li.github.io/post/c_exercise1/</link>
      <pubDate>Wed, 21 Oct 2020 20:09:57 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c_exercise1/</guid>
      <description>verbalize a number; combine two string; reverse a integer; check a valid integer and determine if it is a prime number; check if a integer is prime; clear keyboard buffer; verbalize a number Write a program that reads an integer between 0 and 999 and &amp;ldquo;verbalises it&amp;rdquo;. For example, if the program is given 123 it would display &amp;ldquo;one hundred and twenty three&amp;rdquo;. 1 2 3 4 5 6 7</description>
    </item>
    
    <item>
      <title>c语言笔记(3)</title>
      <link>https://yufei-li.github.io/post/c3/</link>
      <pubDate>Sat, 05 Sep 2020 15:27:14 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c3/</guid>
      <description>左值和右值 左值：标识的应该是个存储位置，内存中的位置，左值可以是个变量名，或者是个表达式，但表达式必须表示的是个内存位置 右值：就是个值，变量</description>
    </item>
    
    <item>
      <title>c语言笔记(2)</title>
      <link>https://yufei-li.github.io/post/c2/</link>
      <pubDate>Sat, 05 Sep 2020 15:05:15 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c2/</guid>
      <description>switch语句 switch语法 1 2 3 4 5 6 7 8 9 10 switch(expression){ case constant-expression : statement(s); break; /* 可选的 */ case constant-expression : statement(s); break; /* 可选的 */ /* 可以有任意数量的 case 语句 */ default : /* 可选的 */ statement(s); } switch</description>
    </item>
    
    <item>
      <title>c语言笔记(1)</title>
      <link>https://yufei-li.github.io/post/c1/</link>
      <pubDate>Sun, 30 Aug 2020 15:40:21 +0800</pubDate>
      
      <guid>https://yufei-li.github.io/post/c1/</guid>
      <description>变量 变量名不能以数字开头，否则会报错 error:invalid suffix &amp;quot;_abc&amp;quot; on integer constant 常量 转义字符\n占一个字节的空间 “abc”由&amp;rsquo;a&amp;rsquo;,&amp;lsquo;b</description>
    </item>
    
  </channel>
</rss>